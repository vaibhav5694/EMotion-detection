from flask import Flask, render_template, request, jsonify
import cv2
import numpy as np
from tensorflow.keras.models import load_model

app = Flask(__name__)

# Load the pre-trained emotion detection model
model = load_model('models/emotion_detection_model.h5')  # Use forward slash or double backslashes

# Map the emotion label to its corresponding emotion
emotion_mapping = {0: 'Angry', 1: 'Disgust', 2: 'Fear', 3: 'Happy', 4: 'Sad', 5: 'Surprise', 6: 'Neutral'}

# ... (rest of your code remains the same)

@app.route('/')
def index():
    return render_template('index.html')

def preprocess_image(image):
    img = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    img = cv2.resize(img, (48, 48))
    img = img / 255.0  # Normalize pixel values
    return img.reshape(1, 48, 48, 1)

@app.route('/predict', methods=['POST'])
def predict_emotion():
    # Get the image from the POST request
    image_data = request.files['image'].read()
    nparr = np.frombuffer(image_data, np.uint8)
    image = cv2.imdecode(nparr, cv2.IMREAD_COLOR)

    # Preprocess the image and make predictions
    input_image = preprocess_image(image)
    predictions = model.predict(input_image)
    emotion_label = np.argmax(predictions)
    predicted_emotion = emotion_mapping[emotion_label]

    return jsonify({'predicted_emotion': predicted_emotion})

if __name__ == '__main__':
    app.run(debug=True)
